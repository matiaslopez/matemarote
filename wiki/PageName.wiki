#summary format documentation

= Formatos de los juegos y logs =
Al iniciarse un juego, esta carga un archivo GAME_FILE donde se le especifican distintas opciones, asi como una lista de trials a utilizar.

La sintaxis del archivo GAME_FILE es una 'lista'. (formato muy facil de manipular con python, javascript y flash).
Una lista es un conjunto de ITEM, encerrados entre corchetes, donde un ITEM a la vez puede ser una lista.

por ejemplo, esta es una lista de 3 items, cuyo tercer item es a la vez, una lista de 2 items.
ej: [ITEM, ITEM, [ITEM, ITEM]]

En la definicion del formato.


= Memoria =

== Formato del GAME_FILE de memoria ==

=== En el GAME_FILE de un juego de memoria especificamos: ===
 * nivel_inicial (_numero natural_):
   * Es el nivel en el que se empieza jugando.
   * *tiene* que haber al menos un trial de este nivel.
 * perdidas (_numero natural_):
   * La cantidad de veces consecutivas que uno debe perder antes de disminuir el nivel.
 * victorias (_numero natural_):
   * La cantidad de veces consecutivas que uno debe ganar antes de aumentar el nivel.
 * numero_de_trials (_numero natural_):
   * La cantidad de trials a jugar, luego de jugar esta cantidad, el juego termina.
 * trials (_lista de TRIAL_):
   * La lista de TRIAL disponibles para el juego.
   * Cuando el juego necesita un trial de un nivel en particular, elige al azar entre todos los TRIAL que tienen ese nivel.

=== Un TRIAL es una lista con ===
 * nivel (_numero natural_):
   * El nivel de dificultad del trial.
 * agrupacion (_numero entero de 0 a 7 inclusive_):
   * 0 significa que no hay agrupamiento.
   * De no ser 0, el valor es el indice (contando desde 1) del elemento de la FICHA por el que agrupamos. ver la descripcion de FICHA para ver la correspondencia indice<>elemento.
 * fichas (_lista de CARD_):
   * La lista de CARD a usar para el trial.

=== Un CARD, o ficha es una lista con... ===
 * marco (_numero entero de 1 a 12 inclusive_)
   * Siempre debe haber un marco
   * Es el marco a usar para la ficha, estos son los valores:
     # Cuadrado con la esquina sup.der. redondeada _/res/svg/marcos/casiuncuadrado.svg_
     # Circulo _/res/svg/marcos/circulo.svg_
     # Nubecita _/res/svg/marcos/circulosss.svg_
     # Cuadrado redondeado en todas las esquinas _/res/svg/marcos/cuadrado.svg_
     # Cuadrado con las esquinas sup.der. e inf.izq. redondeadas _/res/svg/marcos/doble gota.svg_
     # Cuadrado con las esquinas inf.der. e inf.izq. redondeadas _/res/svg/marcos/escudo.svg_
     # Cuadrado con las esquinas sup.der. y sup.izq redondeadas _/res/svg/marcos/escudo2.svg_
     # Estrella de 20 puntas _/res/svg/marcos/estrella.svg_
     # Cuadrado con las esquinas inf.izq, sup.der. y sup.izq. redondeadas. _/res/svg/marcos/gota.svg_
     # Estrella de 8 puntas _/res/svg/marcos/poligono.svg_
     # Estrella de 8 puntas en la mitad superior, hexagono en la inferior _/res/svg/marcos/raro1.svg_
     # Estrella de 8 puntas en la mitad superior, circulo en la inferior _/res/svg/marcos/raro2.svg_

 * fondo (_numero entero de 1 a 13 inclusive_):
   * siempre debe haber un fondo
   * Es el color o trama de fondo a usar en la ficha
     # /res/svg/fondos/playa.svg
     # /res/svg/fondos/azul.svg
     # /res/svg/fondos/celeste.svg
     # /res/svg/fondos/gris.svg
     # /res/svg/fondos/marron.svg
     # /res/svg/fondos/naranja.svg
     # /res/svg/fondos/rojo.svg
     # /res/svg/fondos/rosa.svg
     # /res/svg/fondos/verde.svg
     # /res/svg/fondos/violeta.svg
     # /res/svg/fondos/amarillo.svg
     # /res/svg/fondos/fucsia.svg
     # /res/svg/fondos/marino.svg (celeste)

 * sombrilla (_numero entero de 0 a 12 inclusive _)
   * 0 significa que no hay sombrilla
   * valores:
     # violeta _/res/svg/sombrillas/1.svg_
     # fucsia _/res/svg/sombrillas/2.svg_
     # verde _/res/svg/sombrillas/3.svg_
     # marron _/res/svg/sombrillas/4.svg_
     # celeste _/res/svg/sombrillas/5.svg_
     # rosa _/res/svg/sombrillas/6.svg_
     # naranja _/res/svg/sombrillas/7.svg_
     # amarillo _/res/svg/sombrillas/8.svg_
     # rojo _/res/svg/sombrillas/9.svg_
     # rojo/naranja _/res/svg/sombrillas/10.svg_
     # gris _/res/svg/sombrillas/11.svg_
     # azul _/res/svg/sombrillas/12.svg_

 * baldes (_numero entero de 0 a 2 inclusive_)
   * 0 significa que no hay baldes
   * valores:
     # 2 baldes _/res/svg/baldes/2.svg_
     # 4 baldes _/res/svg/baldes/4.svg_

 * estrellas (_numero entero de 0 a 10 inclusive_)
  * El valor se corresponde con la cantida de estrellas mostradas
  * valores:
     # _/res/svg/estrellas/1.svg_
     # _/res/svg/estrellas/2.svg_
     # _/res/svg/estrellas/3.svg_
     # _/res/svg/estrellas/4.svg_
     # _/res/svg/estrellas/5.svg_
     # _/res/svg/estrellas/6.svg_
     # _/res/svg/estrellas/7.svg_
     # _/res/svg/estrellas/8.svg_
     # _/res/svg/estrellas/9.svg_
     # _/res/svg/estrellas/10.svg_

 * personaje (_numero entero de 0 a 3 inclusive_)
   * 0 significa que no hay personaje
   * valores:
     # ana parada _/res/svg/personaje/anaparada.svg_
     # ana sentada _/res/svg/personaje/anareposera.svg_
     # ono parado _/res/svg/personaje/onoplaya.svg_

 * lentes (_numero entero de 0 a 1 inclusive_)<- jeje, o sea, 0 o 1
   * el archivo de los lentes es _/res/svg/lentes/lentes.svg_

=== Notacion corta de un nivel de memoria ===
{{{
GAME_FILE = [nivel_inicial, perdidas, victorias, numero_de_trials, [TRIAL, TRIAL,...]]
TRIAL = [nivel, agrupacion, [FICHA, FICHA,...]]
FICHA = [marco, fondo, sombrilla, baldes, estrellas, personaje, lentes]
}}}

== Formato del LOG_FILE de memoria ==
Una vez guardado el log crudo, se puede parsear para generar un LOG_FILE, tambien en formato de listas anidadas. En el log simplemente unimos cada TRIAL con la respuesta correspondiente (RESPONSE). 
 
=== LOG_FILE ===
 * responses (_lista de TRIAL_RESPONSE_)

=== TRIAL_RESPONSE ===
 * TRIAL (el TRIAL original al que se da respuesta, mismo formato del GAME_FILE)
 * RESPONSE (una lista RESPONSE, ver mas abajo)

=== RESPONSE ===
 * correct (_numero entero 1 o 0_)
   * El resultado del trial, 1 si gano, 0 si repitio fichas.
 * choices (_lista de CHOICE_)
   * La lista de etapas en las que el jugador elige una ficha.

=== CHOICE ===
 * card_id(_numero entero_)
   * La ficha elegida en esta etapa, el valor es el indice de la ficha en el listado de fichas del TRIAL, contando desde 0.
 * last_mouse (_\[mouse x, mouse y\]_)
   * la ultima posicion del mouse, en una lista de [x,y] con precision de al menos 2 decimales.
 * moves (_lista de MOUSEMOVE_)
   * Una lista de todos los movimientos que se hicieron con el mouse durante esta etapa.
 * positions (_lista de CARD_POS_)
   * La lista de posiciones de cada ficha para esta etapa.

=== MOUSEMOVE ===
 * x (_numero, con minimo de 2 decimales_)
   * la posicion x de ese movimiento.
 * y (_numero, con minimo de 2 decimales_)
   * la posicion y de ese movimiento
 * time (_numero natural_)
   * los milisegundos desde el inicio del juego en los que ocurrio el movimiento

=== CARD_POS ===
 * x(_numero entero_):
   * la posicion x de la ficha
 * y(_numero entero_)
   * la posicion y de la ficha

=== Notacion corta de un GAME_LOG de memoria ===
{{{
GAME_LOG = [TRIAL_RESPONSE, TRIAL_RESPONSE, ...]
TRIAL_RESPONSE = [TRIAL, RESPONSE]
RESPONSE = [correct, [CHOICE, CHOICE, ...]]
CHOICE = [card_id, [last_mouse_x, last_mouse_y], [MOUSEMOVE, MOUSEMOVE, ...], [CARD_POS, CARD_POS, ...]]
MOUSEMOVE = [x,y,time]
CARD_POS = [x,y]
}}}

= Planning =

== Formato del GAME_FILE de planning ==

=== En el GAME_FILE de un juego de planning especificamos: ===
 * nivel_inicial (_numero natural_):
   * Es el nivel en el que se empieza jugando.
   * *tiene* que haber al menos un trial de este nivel.
 * perdidas (_numero natural_):
   * La cantidad de veces consecutivas que uno debe perder antes de disminuir el nivel.
 * victorias (_numero natural_):
   * La cantidad de veces consecutivas que uno debe ganar antes de aumentar el nivel.
 * numero_de_trials (_numero natural_):
   * La cantidad de trials a jugar, luego de jugar esta cantidad, el juego termina.
 * trials (_lista de TRIAL_):
   * La lista de TRIAL disponibles para el juego.
   * Cuando el juego necesita un trial de un nivel en particular, elige al azar entre todos los TRIAL que tienen ese nivel.

=== TRIAL ===
 * nivel (_numero natural_):
   * El nivel de dificultad del trial.
 * max_moves (_numero natural_)
   * La cantidad de movidas maximas permitidas para el trial, luego de esa cantidad, el trial se da por perdido. Para este fin no se considera 'movida' si el jugador comienza a arrastrar un personaje y se arrepiente soltandolo otra vez en la misma casa.
 
 * topleft_house (_numero entero de 1 a 4_)
   * El id de casa que deberia estar posicionada arriba a la izquierda.
   * Los id de casa son:
     # Casa Ana
     # Casa Pancho
     # Casa Nubis
     # Lugar Vacio

 * topright_house (_numero entero de 1 a 4_)
   * El id de casa que deberia estar posicionada arriba a la derecha.
   * ver ids de casa en topleft_house

 * bottomleft_house (_numero entero de 1 a 4_)
   * El id de casa que deberia estar posicionada abajo a la izquierda.
   * ver ids de casa en topleft_house

 * bottomright_house (_numero entero de 1 a 4_)
   * El id de casa que deberia estar posicionada abajo a la derecha.
   * ver ids de casa en topleft_house

 * topleft_char (_numero entero de 0 a 3_)
   * El id de personaje que deberia empezar posicionado arriba a la izquierda.
   * 0 significa que el lugar queda vacio.
   * Los id de personaje son:
     # Ana
     # Pancho
     # Nubis

 * topright_char (_numero entero de 0 a 3_)
   * El id de personaje que deberia empezar posicionado arriba a la derecha.
   * 0 significa que el lugar queda vacio.
   * ver ids de personaje en topleft_char

 * bottomleft_char (_numero entero de 0 a 3_)
   * El id de personaje que deberia empezar posicionado abajo a la izquierda.
   * 0 significa que el lugar queda vacio.
   * ver ids de personaje en topleft_char

 * bottomright_char (_numero entero de 0 a 3_)
   * El id de personaje que deberia empezar posicionado abajo a la derecha.
   * 0 significa que el lugar queda vacio.
   * ver ids de personaje en topleft_char

=== Notacion corta de un GAME_FILE de planning ===
{{{
GAME_FILE = [nivel_inicial, perdidas, victorias, trial_count, [TRIAL, TRIAL, ..]]
TRIAL = [nivel, min_moves, max_moves, rotacion, topleft_house, topright_house, bottomleft_house, bottomright_house, topleft_char, topright_char, bottomleft_char, bottomright_char]
}}}

== Formato del LOG_FILE de planning ==
Una vez guardado el log crudo, se puede parsear para generar un LOG_FILE, tambien en formato de listas anidadas. En el log simplemente unimos cada TRIAL con la respuesta correspondiente (RESPONSE). 
 
=== LOG_FILE ===
 * responses (_lista de TRIAL_RESPONSE_)

=== TRIAL_RESPONSE ===
 * TRIAL (el TRIAL original al que se da respuesta, mismo formato del GAME_FILE)
 * RESPONSE (una lista RESPONSE, ver mas abajo)

=== RESPONSE ===
 * correct (_numero entero 1 o 0_)
   * si el trial fue terminado correctamente (o sea, lo hizo en menos de max_moves)
 * move_count (_numero natural_)
   * cantidad de movidas en las que resolvio el trial
 * movidas (_lista de CHAR_DRAG_)
   * Son las movidas completadas o canceladas que se hicieron durante el trial.

=== CHAR_DRAG ===
 * char_id (_numero entero de 1 a 3_)
   * el id del personaje siendo arrastrado
   * Los id de personaje son (como en el GAME_FILE)
     # Ana
     # Pancho
     # Nubis
 
 * from (_numero entero de 1 a 4_)
   * el id de casa desde donde fue arrastrado
   * Los id de casa son: (como en el GAME_FILE)
     # Casa Ana
     # Casa Pancho
     # Casa Nubis
     # Lugar Vacio
   
 * to (_numero entero de 1 a 4_)
   * el id de casa hacia donde fue arrastrado
   * si es igual que _from_, entonces el movimiento fue cancelado
 
 * movimientos (_lista de MOUSE_MOVE_)
   * los distintos movimientos del mouse mientras se arrastraba la ficha

=== MOUSE_MOVE ===
 * x (_numero con al menos 2 decimales_)
   * la posicion x del mouse en ese movimiento

 * y (_numero con al menos 2 decimales_)
   * la posicion y del mouse en ese movimiento

 * time (_numero natural_)
  * Los milisegundos desde el inicio del juego al momento de ese movimiento
  
=== Notacion corta de un LOG_FILE de planning ===
{{{
LOG_FILE = [TRIAL_RESPONSE, TRIAL_RESPONSE, ...]
TRIAL_RESPONSE = [TRIAL, RESPONSE]
RESPONSE = [correct, move_count, [CHAR_DRAG, CHAR_DRAG, ...]]
CHAR_DRAG = [char_id, from, to, [MOUSE_MOVE, MOUSE_MOVE, ...]]
MOUSE_MOVE = [x,y,time]
}}}